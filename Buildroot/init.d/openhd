#!/bin/bash
### BEGIN INIT INFO
# Provides:          openhd
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts OpenHD
# Description:       Runs OpenHD on system startup with root privileges
### END INIT INFO

LOG_FILE="/var/log/openhd.log"
COMMAND="openhd"
PID_FILE="/var/run/openhd.pid"

start_openhd() {
    echo "Starting OpenHD..." | tee -a "$LOG_FILE"

    if [[ $(id -u) -ne 0 ]]; then
        echo "Restarting script with root privileges..." | tee -a "$LOG_FILE"
        exec sudo "$0" start
        exit 0
    fi

    stop_openhd  # Ensure no previous instance is running

    # Run OpenHD in the background
    nohup $COMMAND >> "$LOG_FILE" 2>&1 &
    echo $! > "$PID_FILE"

    echo "OpenHD started successfully with PID $(cat $PID_FILE)!" | tee -a "$LOG_FILE"
}

stop_openhd() {
    echo "Stopping OpenHD..." | tee -a "$LOG_FILE"

    if [[ -f "$PID_FILE" ]]; then
        PID=$(cat "$PID_FILE")
        if kill "$PID" 2>/dev/null; then
            echo "OpenHD stopped (PID: $PID)." | tee -a "$LOG_FILE"
        else
            echo "Failed to stop OpenHD. Process might not exist." | tee -a "$LOG_FILE"
        fi
        rm -f "$PID_FILE"
    else
        echo "OpenHD is not running." | tee -a "$LOG_FILE"
    fi
}

restart_openhd() {
    stop_openhd
    start_openhd
}

status_openhd() {
    if [[ -f "$PID_FILE" ]]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo "OpenHD is running (PID: $PID)." | tee -a "$LOG_FILE"
            exit 0
        else
            echo "OpenHD is not running, but PID file exists." | tee -a "$LOG_FILE"
            exit 1
        fi
    else
        echo "OpenHD is not running." | tee -a "$LOG_FILE"
        exit 1
    fi
}

case "$1" in
    start)
        start_openhd
        ;;
    stop)
        stop_openhd
        ;;
    restart)
        restart_openhd
        ;;
    status)
        status_openhd
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}" | tee -a "$LOG_FILE"
        exit 1
        ;;
esac

exit 0
